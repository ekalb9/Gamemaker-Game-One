<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Constants
grav = 0.75
jump = 10
spd = 5.5
//Controls
keyJump = vk_space
keyLeft = ord("A")
keyRight = ord("D")
//Collision variables - Don't change
hsp = 1
vsp = 1
dir = 0
xspd = 0
frick = 5
//Combat variables
global.hp = 6
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dir = keyboard_check(keyRight) - keyboard_check(keyLeft)

//Jumping
if place_meeting(x,y+1,obj_wall) and keyboard_check_pressed(keyJump)
vsp -= jump
 
//Set vertical and horizontal speed
hsp = spd * dir
vsp += (grav * !place_meeting(x,y + 1,obj_wall))

//Check for vertical collisions
if place_meeting(x,y+vsp,obj_wall)
{
while(!place_meeting(x,y + sign(vsp),obj_wall))
 {
 y+=0.1*sign(vsp)
 }
vsp = 0
}
//Check for horizontal collisions
if place_meeting(x + hsp,y,obj_wall) 
{
while(!place_meeting(x+(1*dir),y,obj_wall))
 {
 x+=0.1*dir
 }
 hsp = 0
}
//Check for diagonal collisions
if place_meeting(x + hsp,y+vsp,obj_wall)
{
while(!place_meeting(x+(1*dir),y + sign(vsp),obj_wall))
{
x+=0.1*dir
y+=0.1*sign(vsp)
}
vsp=0
hsp=0
}
 
//Increment the current x and y coords by the vertical and horizontal speed
x+=hsp
y+=vsp 

//Flip the image based on the mouse location
if mouse_x &gt; x
image_xscale = 1
else
image_xscale = -1

//Setting the locaion of the guns and pivots
obj_armpiv1.x = obj_player.x + obj_armpiv1.offset*obj_player.image_xscale
obj_armpiv1.y = obj_player.y

obj_gun1.x = obj_armpiv1.x + lengthdir_x(obj_gun1.recoil_offset,obj_gun1.image_angle)
obj_gun1.y = obj_armpiv1.y + lengthdir_y(obj_gun1.recoil_offset,obj_gun1.image_angle)

obj_armpiv2.x = obj_player.x - obj_armpiv2.offset*obj_player.image_xscale
obj_armpiv2.y = obj_player.y

obj_gun2.x = obj_armpiv2.x + lengthdir_x(obj_gun2.recoil_offset,obj_gun2.image_angle)
obj_gun2.y = obj_armpiv2.y + lengthdir_y(obj_gun2.recoil_offset,obj_gun2.image_angle)



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.hp -= 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
